version: '3.4'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    networks:
      - ubuntu_this_network
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  spring-boot-blue:
    container_name: spring-boot-blue
    image: ${DOCKER_USERNAME}/spring:latest
    expose:
      - "8080"
    environment:
      - JAVA_OPTS=-XX:+UseG1GC -Xms256m -Xmx512m
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - ubuntu_this_network
    restart: always

  spring-boot-green:
    container_name: spring-boot-green
    image: ${DOCKER_USERNAME}/spring:latest
    expose:
      - "8080"
    environment:
      - JAVA_OPTS=-XX:+UseG1GC -Xms256m -Xmx512m
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - ubuntu_this_network
    restart: always

  redis:
    image: redis:alpine
    container_name: redis_boot
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis:/data
    networks:
      - ubuntu_this_network
    restart: always

networks:
  ubuntu_this_network:
    external: true

volumes:
  redis: