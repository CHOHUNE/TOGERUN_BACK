
services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${APP_DIR}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${APP_DIR}/nginx/conf.d:/etc/nginx/conf.d
      - ${APP_DIR}/ssl:/etc/nginx/ssl:ro
      - ${APP_DIR}/certbot/conf:/etc/letsencrypt:ro
      - ${APP_DIR}/certbot/www:/var/www/certbot:ro
    networks:
      - ubuntu_this_network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  spring-boot-green:
    container_name: spring-boot-green
    image: ${DOCKER_USERNAME}/spring:latest
    ports:
      - "8082:8082"
    environment:
      - JAVA_OPTS=-XX:+UseG1GC -Xms256m -Xmx512m
      - SPRING_PROFILES_ACTIVE=green,prod
      - SERVER_PORT=8082
      - SPRING_DATA_REDIS_HOST=redis-master
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - ubuntu_this_network
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ${APP_DIR}/certbot/conf:/etc/letsencrypt:ro
      - ${APP_DIR}/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  redis-master:
    image: redis:alpine
    container_name: redis_boot
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - redis-master:/data
    networks:
      - ubuntu_this_network
    restart: always

  redis-replica:
    image: redis:alpine
    container_name: redis-replica
    command: redis-server --requirepass "${REDIS_PASSWORD}" --replicaof redis-master 6379 --masterauth "${REDIS_PASSWORD}"
    ports:
      - "6380:6379"
    depends_on:
      - redis-master
    volumes:
      - redis-replica:/data
    networks:
      - ubuntu_this_network
    restart: always

networks:
  ubuntu_this_network:
    external: true

volumes:
  redis-master:
  redis-replica:
